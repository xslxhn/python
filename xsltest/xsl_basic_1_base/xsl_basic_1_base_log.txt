-------------------- 1 -待解决问题
* logging类的应用
* 沉默获取管理员权限
* 彻底删除文件，包括删除自己
* 文件内容加密与解密
* 向服务器传送文件
-------------------- 2 -零散知识点
* 类似C语言中的sprintf: 直接用%即可,例如：str1='%02x %02d' % (i,j)
-------------------- 3 -查看系统信息
3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)]
platform.architecture():    ('64bit', 'WindowsPE')
platform.system():          Windows
platform.version():         10.0.17134
platform.machine():         AMD64
platform.python_version():  3.7.0
-------------------- 4 -数据类型
打印整型变量  ： 100
类似于C中的printf：counter = 100
打印浮点变量  ： 1000.0
打印字符串乘法： XSL
打印字符串    ： XSLXSLXSLXSLXSLXSLXSLXSLXSLXSL
打印列表      ： ['item1', 'item2', 'item3']
打印列表(追加)： ['item1', 'item2', 'item3', 'append']
打印列表(追加)： ['item1', 'item2', 'append']
打印元祖      ： ('runoob', 786, 2.23, 'john', 70.2)
打印字典(成员)： this is one This is two
打印字典(整体)： {'name': 'xsl', 'code': 824}
打印字典(键值)： dict_keys(['name', 'code'])
打印字典(值  )： dict_values(['xsl', 824])
-------------------- 5 -内建函数
-----------Number类型转
int(x[,base])         将x转换为一个整数
long(x[,base])        将x转换为一个长整数
float(x)              将x转换为一个浮点数
complex(real[,imag])  创建一个复数
str(x)                将对象x转换为字符串
repr(x)               将对象x转换为表达式字符串
eval(str)             用来计算在字符串中的有效Python表达式，并返回一个对象
tuple(s)              将序列 s 转换为一个元组
list(s)               将序列 s 转换为一个列表
chr(x)                将一个整数转换为一个字符
unichr(x)             将一个整数转换为Unicode字符
ord(x)                将一个字符转换为它的整数值
hex(x)                将一个整数转换为一个十六进制字符串
oct(x)                将一个整数转换为一个八进制字符串
bool(x)               将一个参数转为布尔类型 0/空-False 非0/非空-True
-----------数学函数
abs(x)                返回数字的绝对值，如abs(-10) 返回 10
ceil(x)               返回数字的上入整数，如math.ceil(4.1) 返回 5
cmp(x, y)             如果 x < y 返回 -1, 如果 x == y 返回 0, 如果 x > y 返回 1
exp(x)                返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045
fabs(x)               返回数字的绝对值，如math.fabs(-10) 返回10.0
floor(x)              返回数字的下舍整数，如math.floor(4.9)返回 4
log(x)                如math.log(math.e)返回1.0,math.log(100,10)返回2.0
log10(x)              返回以10为基数的x的对数，如math.log10(100)返回 2.0
max(x1, x2,...)       返回给定参数的最大值，参数可以为序列
min(x1, x2,...)       返回给定参数的最小值，参数可以为序列
modf(x)               返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示
pow(x, y)             x**y 运算后的值
round(x [,n])         返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数
sqrt(x)               返回数字x的平方根，数字可以为负数，返回类型为实数，如math.sqrt(4)返回 2+0j
-----------随机数函数
random.choice(seq)    从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。
random.randrange ([start,] stop [,step])从指定范围内，按指定基数递增的集合中获取一个随机数，基数缺省值为1
random.random()       随机生成下一个实数，它在[0,1)范围内
random.randint(min,max)  随机生成下一个一定范围内的整数
random.seed([x])      改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed
random.shuffle(lst)   将序列的所有元素随机排序
random.uniform(x, y)  随机生成下一个实数，它在[x,y]范围内
-----------三角函数
acos(x)               返回x的反余弦弧度值
asin(x)               返回x的反正弦弧度值
atan(x)               返回x的反正切弧度值
atan2(y, x)           返回给定的 X 及 Y 坐标值的反正切值
cos(x)                返回x的弧度的余弦值
hypot(x, y)           返回欧几里德范数 sqrt(x*x + y*y)
sin(x)                返回的x弧度的正弦值
tan(x)                返回x弧度的正切值
degrees(x)            将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0
radians(x)            将角度转换为弧度
-----------数学常量
pi                    圆周率，一般以π来表示
e                     自然常数
-----------所有关键字
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
-----------其他
len(s)                返回一个对象的长度
set(s)                转换为可变集合
dict(d)               创建一个字典。d 必须是一个序列 (key,value)元组。
frozenset(s)          转换为不可变集合
-------------------- 6 -运算符
算数运算符：          + ,- ,* ,/ ,% ,**,//
比较运算符：          ==,!=,<>,> ,< ,>=,<=
赋值运算符：          = ,+=,-=,*=,/=,%=,**=,//=
按位运算符：          & ,| ,^ ,- ,<< ,>>
逻辑运算符：          and ,or ,not
成员运算符：          in ,not in
身份运算符：          is ,is not
字符串运算符：        +,*,[],[:],in,not in,r/R,%
字符串格式化运算符：  %c,%s,%d,%u,%o,%x,%X,%f,%e,%E,%g,%G,%p
  格式化运算符辅助：  *,-,+,<sp>,#,0,%,(var),m.n
字符串复杂引用：      '''
-------------------- 7 -条件
条件语句：            if-elif-else
条件实例：else
-------------------- 8 -循环
循环语句：            while,for
循环控制语句：        break,continue,pass
for 实例 hello 0
for 实例 hello 1
-------------------- 9 -打印
0123456789
-------------------- 10 -时间
Unix时间戳   ：        1540952342.1703546
.localtime   ：        time.struct_time(tm_year=2018, tm_mon=10, tm_mday=31, tm_hour=10, tm_min=19, tm_sec=2, tm_wday=2, tm_yday=304, tm_isdst=0)
.asctime     ：        Wed Oct 31 10:19:02 2018
延时(秒)：            time.sleep(x)
-------------------- 11 -文件
创建xsl_basic_1_base.txt并写入字符串: 1234567890
当前文件位置 10
定位到5,读取5字节数据: 67890
-------------------- 12 -文件读写---pickle保存模块
.dump: {'name': 'pickle_name', 'pickle_age': 36}
.loat: {'name': 'pickle_name', 'pickle_age': 36}
-------------------- 13 -函数使用
正在调用一个函数！
-------------------- end
-------------------- 15 -类的使用
-------------------- 16 -模块的使用(模块就是函数/类/变量的组合)
turtle       ：       小乌龟画图
copy.copy    ：       浅拷贝,改变原对象影响新对象
copy.deepcopy：       深拷贝,改变原对象不影响新对象
keyword      ：       关键字
-------------------- 17 -输入输出

请输入按键后按回车键退出(input)
1

请输入按键后按回车键退出(sys.stdin.readline(max))
2

输出0-9 (sys.stdout.write)
0123456789
--------------------
xsl控制系统无错退出
